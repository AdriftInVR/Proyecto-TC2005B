<%- include('partials/header.ejs') %>
<%- include('partials/spinner.ejs') %>
    
<body>
    <div class="h-[main] w-full flex justify-center p-8">
        <div class="w-1/3 bg-white">
            <div class="sticky top-[10vh]">    
                <input type="radio" id="pj" name="graph_selection" value="project" onchange='EpicToggle()' checked>
                <label for="project">By Project</label>&nbsp;
                <input type="radio" id="ep" name="graph_selection" value="epic" onchange='EpicToggle()'>
                <label for="epic">By Epic</label><br>
            </div>
            <section id ='projectDiv' class="sticky top-[15vh]">
                Project: 
                <select id="projects">
                    <% let i = true %> 
                    <% for (project of projects) { %>
                        <option value="<%= project.ProjectID %>" <% if (i) { %> selected <% i = false  } %>><%= project.ProjectName %></option>
                    <% } %>
                </select>
            </section>
            <section id='epicDiv' style="visibility:hidden" class="sticky top-[20vh]">
                Epics: 
                <select id="epics">
                    
                </select>
            </section>
        </div>

        <div class="w-2/3">
            
            <div class="p-16">
                <canvas id ='weeklyAP'></canvas>
            </div>
            <div class="p-16">
                <canvas id ='frontBackAP'></canvas>
            </div>
            <div class="p-16">
                <canvas id="statusPie"></canvas>
            </div>

            <div class="p-16">
                <canvas id ='burnupAP'></canvas>
            </div>
        </div>
    </div>
    
</body>
<%- include('partials/endHTML.ejs') %>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
    // Este script cambia la visibilidad del dropdown de Epics
    function EpicToggle(flag) {
        var div = document.getElementById('epicDiv');
        if (div.style.visibility == "hidden"){
            div.style.visibility = "visible";
            ChartAll();
        }
        else {
            div.style.visibility = "hidden";
            ChartAll();
        }
    }
</script>

<!--BURN UP AP-->
<script>
    // Estos scripts crean graficas de Linea para los AP completados en una semana
    var burnupChart;

    //Actualiza datos
    function ProjectBurnChart(projectID) {
        if (burnupChart) {
            burnupChart.destroy()
        }

        const buap = document.getElementById('burnupAP');
        fetch('/data/project/totalAPp/' + projectID, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            },
        }).then(result => {
            return result.json;
        }).then(data => {
            let data_APp = [];
            for(var i = 0; i <= data.APTotalesP; i++) {
                console.log(data_APp[0].push(data.APTotalesP));
            }

        })
         
        const APBurnUp = {
        labels: [1, 3, 5, 8],
        datasets: [{
            data: data_APp,
            //data: [55, 89, 2],
            fill: false,
            borderColor: 'rgb(75, 192, 192)',
            tension: 0.1
            }]
        };
        const configura = {
            type: 'line',
            data: APBurnUp,
        };
        new Chart(buap, configura);
    }
    
</script>

<script>
    // Este script asigna los valores del dropdown de Epics, y los cambia al cambiar el dropdown de proyecto
    window.onload = (event) => {
        SetEpicOptions();
        ChartAll()
    }
    $("#projects").change(function (event) {
        SetEpicOptions();
        ChartAll();
    });
    $("#epics").change(function (event) {
        ChartAll();
    });
    function SetEpicOptions() {
        epicOptions = '';
        fetch('/data/project/epics/' + $("#projects").val(), {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            },
        }).then(result => {
            return result.json();
        }).then(epics => {
            let j = true;
            for (let epic of epics.status) {
                epicOptions += "<option value='" + epic.EpicID + "'";
                if (j) {
                    epicOptions += " selected"
                    j = false;
                }
                epicOptions += ">" + epic.EpicName + "</option>";
            };
            document.getElementById("epics").innerHTML = epicOptions
        })
    }
</script>

<script>
    // Estos scripts crean graficas de Linea para los AP completados en una semana
    const ap = document.getElementById('weeklyAP');
    const APchart = {
        labels: ['You','Are','The',"'Ocean's",'Gray','Waves'],
        datasets: [{
            data: [65, 59, 80, 81, 56, 55],
            fill: false,
            borderColor: 'rgb(75, 192, 192)',
            tension: 0.1
        }]
    };
    const config = {
        type: 'line',
        data: APchart,
    };
    new Chart(ap, config);
</script>

<script>
    // Estos scripts crean graficas de Pie para los diferentes estatus de un proyecto o Epic
    var pieChart;
    function ProjectPieChart(projectID){
        if (pieChart) {
            pieChart.destroy();
        }    
        const pie = document.getElementById('statusPie');
        fetch('/data/project/status/' + projectID, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            },
        }).then(result => {
            return result.json();
        }).then(data => {
            let data_labels = [];
            let data_count = [];
            for (let tag of data.status) {
                data_labels.push(tag.Nombre);
                data_count.push(tag.Cantidad);
            }
            const PIEchart = {
                labels: data_labels,
                datasets: [{
                    data: data_count,
                    backgroundColor: [
                    'rgb(255, 99, 132)',
                    'rgb(54, 162, 235)',
                    'rgb(255, 205, 86)'
                    ],
                    hoverOffset: 4
                }]
            };
            const config = {
                type: 'pie',
                data: PIEchart,
                options: {
                    plugins: {
                        title: {
                            display: true,
                            text: 'Task for State'
                        },
                    },
                    responsive: true,                    
                }
            };
            pieChart = new Chart(pie, config);
        })
    }
    function EpicPieChart(epicID){
        if (pieChart) {
            pieChart.destroy();
        }  
        const pie = document.getElementById('statusPie');
        fetch('/data/project/epic/status/' + epicID, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            },
        }).then(result => {
            return result.json();
        }).then(data => {
            let data_labels = [];
            let data_count = [];
            for (let tag of data.status) {
                data_labels.push(tag.Nombre);
                data_count.push(tag.Cantidad);
            }
            const PIEchart = {
                labels: data_labels,
                datasets: [{
                    data: data_count,
                    backgroundColor: [
                    'rgb(255, 99, 132)',
                    'rgb(54, 162, 235)',
                    'rgb(255, 205, 86)'
                    ],
                    hoverOffset: 4
                }]
            };
            const config = {
                type: 'pie',
                data: PIEchart,
                options: {
                    plugins: {
                        title: {
                            display: true,
                            text: 'Task for State'
                        },
                    },
                    responsive: true,                    
                }
            };
            pieChart = new Chart(pie, config);
        })
    }
</script>

<script>
    var barChar;
    function areasBarChart(projectID){
        if (barChar) {
            barChar.destroy();
        }    
        const bar = document.getElementById('frontBackAP');
        fetch('/data/project/area/' + projectID, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            },
        }).then(result => {
            return result.json();
        }).then(data => {
            let data_labels = ['Frontend','Backend'];
            let data_countComplete = [data.completeFront,data.completeBack];            
            let data_countTotal = [data.allFront,data.allBack];            
        
            const BARchart = {
                labels: data_labels,
                datasets: [
                    {
                        label: 'Completadas',
                        data: data_countComplete,
                        backgroundColor: ['rgb(255, 99, 132)'],
                        hoverOffset: 4
                    },
                    {
                        label: 'Total',
                        data: data_countTotal,
                        backgroundColor: ['rgb(54, 162, 235)'],
                        hoverOffset: 4
                    }
                ]
            };
            const config = {
                type: 'bar',
                data: BARchart,
                options: {
                    plugins: {
                    title: {
                        display: true,
                        text: 'Frontend Backend Completed Tasks'
                    },
                    },
                    responsive: true,
                    scales: {
                    x: {
                        stacked: true,
                    },
                    y: {
                        stacked: true
                    }
                    }
                }
            };
            barChar = new Chart(bar, config);
        })    
    }
    function areasBarChartEpic(epicID){
        if (barChar) {
            barChar.destroy();
        }    
        const bar = document.getElementById('frontBackAP');
        fetch('/data/project/epic/area/' + epicID, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            },
        }).then(result => {
            return result.json();
        }).then(data => {
            let data_labels = ['Frontend','Backend'];
            let data_countComplete = [data.completeFront,data.completeBack];            
            let data_countTotal = [data.allFront,data.allBack];               
        
            const BARchart = {
                labels: data_labels,
                datasets: [
                    {
                        label: 'Completadas',
                        data: data_countComplete,
                        backgroundColor: ['rgb(255, 99, 132)'],
                        hoverOffset: 4
                    },
                    {
                        label: 'Total',
                        data: data_countTotal,
                        backgroundColor: ['rgb(54, 162, 235)'],
                        hoverOffset: 4
                    }
                ]
            };
            const config = {
                type: 'bar',
                data: BARchart,
                options: {
                    plugins: {
                    title: {
                        display: true,
                        text: 'Frontend Backend Completed Tasks'
                    },
                    },
                    responsive: true,
                    scales: {
                    x: {
                        stacked: true,
                    },
                    y: {
                        stacked: true
                    }
                    }
                }
            };
            barChar = new Chart(bar, config);
        })    
    }
</script>

<script>
    function ChartAll() {
        if (document.getElementById('epicDiv').style.visibility == "hidden") {
            ProjectPieChart($("#projects").val());
            areasBarChart($("#projects").val());
            ProjectBurnChart($("#projects").val());
        } else {
            EpicPieChart($("#epics").val());
            areasBarChartEpic($("#epics").val());
        }
    }
</script>